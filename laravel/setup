#!/bin/bash

# https://laravel.com/docs/5.1/quickstart

reset=false
for arg in "$@"
do
    case "$arg"
    in
	--reset) reset=true
    esac
done    

# check for required packages
for pkg in composer php php-cli php-xml php-curl mysql-server mysql-client
do
    if ! dpkg -s $pkg | grep -q "Status: install ok installed"
    then
	PKG+=("$pkg") 
    fi
done

# install missing packages
if [ ${#PKG[@]} -gt 0 ]
then
    echo "installing package(s) "${PKG[@]}" (may ask sudo password)..."
    if ! sudo apt install -y "${PKG[@]}"
    then
	echo "some required ubuntu packages (${PKG[@]}) failed to install"
	exit 1
    fi
fi

# create quickstart
if [ "$reset" = "true" ]
then
    /bin/rm -rf quickstart
fi

if [ ! -d quickstart ]
then
    echo "creating quickstart project..."
    if ! composer create-project laravel/laravel quickstart --prefer-dist
    then
	echo "composer failed."
	exit 1
    fi
fi

# bash function to create random 256 bit key as 64 characters that
# include lower case, upper case, numbers, and special characters.
# it takes 1024 random bytes from the os, passes it through a sha256
# hash, then "leet" translates the result.  The last step does not
# add any entropy, but it lets the key pass the mysql requirements
# for a password (upper, lower, numeric and symbol)
function key256 () {
    dd bs=1024 count=1 if=/dev/random | sha256sum | cut --delimiter=' ' --fields=1 | sed 's/a/@/g;s/b/!/g;s/1/I/g;s/0/O/g'
}

cd quickstart

# setup database if it has not been setup before
if egrep -q "^DB_PASSWORD=$" .env
then
    echo "creating quickstart mysql database and editing quickstart/.env (may require sudo password)..."
    DB_NAME=laravel-quickstart-db
    DB_USER=laravel-quickstart-user
    DB_PASS="$(key256)"
    if [ "$reset" = "true" ]
    then
    sudo mysql <<SQL
DROP DATABASE \`$DB_NAME\`;
DROP USER '$DB_USER'@'localhost';
SQL
    fi
    
    sudo mysql <<SQL
CREATE 	 DATABASE IF NOT EXISTS \`$DB_NAME\`;
DROP USER IF EXISTS '$DB_USER'@'localhost';
CREATE USER '$DB_USER'@'localhost' IDENTIFIED BY '$DB_PASS';
GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP,ALTER
ON \`$DB_NAME\`.*
TO '$DB_USER'@'localhost';
FLUSH PRIVILEGES;
SQL
  sed -i- -e "s/^DB_DATABASE=.*$/DB_DATABASE='$DB_NAME'/" \
         -e "s/^DB_USERNAME=.*$/DB_USERNAME='$DB_USER'/" \
         -e "s/^DB_PASSWORD=.*$/DB_PASSWORD='$DB_PASS'/" .env

  if ! php artisan migrate
  then
      echo "artisan migrate failed."
      exit 1
  fi
  
fi

# count how many regular files are in args
function count() {
    local n=0
    local file
    for file in "$@"
    do
	if [ -f "$file" ]
	then
	    n=$(($n+1))
	fi
    done
    echo $n
}

# see if create_tasks_table migraion already exits, ow create with name column
if [ $(count database/migrations/*create_tasks_table.php) -eq 0 ]
then
    echo "Create table tasks and migrate"
    php artisan make:migration create_tasks_table --create=tasks

    sed -i- "/^ *\$table->id();\$/a            \$table->string('name');" database/migrations/*create_tasks_table.php

    if ! php artisan migrate
    then
	echo "table creation failed"
	exit 1
    fi
    if ! php artisan make:model Task
    then
	echo "model creation failed"
	exit 1
    fi
fi

if ! grep "App\\Models\\Task" routes/web.php
then
   cp -r ../skeleton/* .
fi

echo "setup ok - use 'php artisan serve' to run dev server in the quickstart directory"
